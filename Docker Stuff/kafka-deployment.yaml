apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
              value: "true"
            - name: KAFKA_AUTHORIZER_CLASS_NAME
              value: kafka.security.authorizer.AclAuthorizer
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_COMPRESSION_TYPE
              value: gzip
            - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
              value: "false"
            - name: KAFKA_JMX_PORT
              value: "9091"
            - name: KAFKA_NUM_PARTITIONS
              value: "12"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          image: confluentinc/cp-kafka
          name: kafka
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      restartPolicy: Always
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-data
status: {}
